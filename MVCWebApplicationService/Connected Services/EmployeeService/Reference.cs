//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCWebApplicationService.EmployeeService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmployeeService.IEmployee")]
    public interface IEmployee {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployee/Message", ReplyAction="http://tempuri.org/IEmployee/MessageResponse")]
        string Message();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployee/Message", ReplyAction="http://tempuri.org/IEmployee/MessageResponse")]
        System.Threading.Tasks.Task<string> MessageAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployee/GetEmployees", ReplyAction="http://tempuri.org/IEmployee/GetEmployeesResponse")]
        ApplicationService.DTOs.EmployeeDTO[] GetEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployee/GetEmployees", ReplyAction="http://tempuri.org/IEmployee/GetEmployeesResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTOs.EmployeeDTO[]> GetEmployeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployee/GetEmployeeByID", ReplyAction="http://tempuri.org/IEmployee/GetEmployeeByIDResponse")]
        ApplicationService.DTOs.EmployeeDTO GetEmployeeByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployee/GetEmployeeByID", ReplyAction="http://tempuri.org/IEmployee/GetEmployeeByIDResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTOs.EmployeeDTO> GetEmployeeByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployee/PostEmployee", ReplyAction="http://tempuri.org/IEmployee/PostEmployeeResponse")]
        string PostEmployee(ApplicationService.DTOs.EmployeeDTO employeeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployee/PostEmployee", ReplyAction="http://tempuri.org/IEmployee/PostEmployeeResponse")]
        System.Threading.Tasks.Task<string> PostEmployeeAsync(ApplicationService.DTOs.EmployeeDTO employeeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployee/DeleteEmployee", ReplyAction="http://tempuri.org/IEmployee/DeleteEmployeeResponse")]
        string DeleteEmployee(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployee/DeleteEmployee", ReplyAction="http://tempuri.org/IEmployee/DeleteEmployeeResponse")]
        System.Threading.Tasks.Task<string> DeleteEmployeeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployee/SoftDeleteEmployee", ReplyAction="http://tempuri.org/IEmployee/SoftDeleteEmployeeResponse")]
        string SoftDeleteEmployee(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployee/SoftDeleteEmployee", ReplyAction="http://tempuri.org/IEmployee/SoftDeleteEmployeeResponse")]
        System.Threading.Tasks.Task<string> SoftDeleteEmployeeAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmployeeChannel : MVCWebApplicationService.EmployeeService.IEmployee, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeeClient : System.ServiceModel.ClientBase<MVCWebApplicationService.EmployeeService.IEmployee>, MVCWebApplicationService.EmployeeService.IEmployee {
        
        public EmployeeClient() {
        }
        
        public EmployeeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmployeeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Message() {
            return base.Channel.Message();
        }
        
        public System.Threading.Tasks.Task<string> MessageAsync() {
            return base.Channel.MessageAsync();
        }
        
        public ApplicationService.DTOs.EmployeeDTO[] GetEmployees() {
            return base.Channel.GetEmployees();
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTOs.EmployeeDTO[]> GetEmployeesAsync() {
            return base.Channel.GetEmployeesAsync();
        }
        
        public ApplicationService.DTOs.EmployeeDTO GetEmployeeByID(int id) {
            return base.Channel.GetEmployeeByID(id);
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTOs.EmployeeDTO> GetEmployeeByIDAsync(int id) {
            return base.Channel.GetEmployeeByIDAsync(id);
        }
        
        public string PostEmployee(ApplicationService.DTOs.EmployeeDTO employeeDto) {
            return base.Channel.PostEmployee(employeeDto);
        }
        
        public System.Threading.Tasks.Task<string> PostEmployeeAsync(ApplicationService.DTOs.EmployeeDTO employeeDto) {
            return base.Channel.PostEmployeeAsync(employeeDto);
        }
        
        public string DeleteEmployee(int id) {
            return base.Channel.DeleteEmployee(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteEmployeeAsync(int id) {
            return base.Channel.DeleteEmployeeAsync(id);
        }
        
        public string SoftDeleteEmployee(int id) {
            return base.Channel.SoftDeleteEmployee(id);
        }
        
        public System.Threading.Tasks.Task<string> SoftDeleteEmployeeAsync(int id) {
            return base.Channel.SoftDeleteEmployeeAsync(id);
        }
    }
}
